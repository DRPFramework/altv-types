{
  "api/alt-client.AreaBlip.html": {
    "href": "api/alt-client.AreaBlip.html",
    "title": "Class AreaBlip",
    "keywords": "Class AreaBlip Inheritance BaseObject WorldObject Blip AreaBlip Inherited Members alpha asMissionCreator bright category color crewIndicatorVisible flashInterval flashTimer flashes flashesAlternate friendIndicatorVisible friendly gxtName heading headingIndicatorVisible highDetail name number outlineIndicatorVisible pos priority pulse route routeColor scale secondaryColor shortRange showCone shrinked sprite tickVisible type valid deleteMeta(string) destroy() fade(number, number) getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class AreaBlip extends Blip Constructors View Source AreaBlip(number, number, number, number, number) Declaration public AreaBlip(x: number, y: number, z: number, width: number, height: number): AreaBlip Parameters Type Name Description number x number y number z number width number height"
  },
  "api/alt-client.BaseObject.html": {
    "href": "api/alt-client.BaseObject.html",
    "title": "Class BaseObject",
    "keywords": "Class BaseObject Module : alt-client Package : @altmp/altv-types Syntax class BaseObject Properties View Source type Type of the object. Declaration public readonly type: number Property Value Type Description number View Source valid Object usability. Declaration public readonly valid: boolean Property Value Type Description boolean Methods View Source deleteMeta(string) Removes the specified key. Declaration deleteMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source destroy() Removes the object from the world. Declaration destroy(): void View Source getMeta(string) Gets a value using the specified key. Declaration getMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source hasMeta(string) Determines whether contains the specified key. Declaration hasMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean True when element associated with the specified key is stored. View Source setMeta(string, any) Stores the given value with the specified key. Declaration setMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared locally."
  },
  "api/alt-client.Blip.html": {
    "href": "api/alt-client.Blip.html",
    "title": "Class Blip",
    "keywords": "Class Blip Inheritance BaseObject WorldObject Blip Inherited Members pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class Blip extends WorldObject Properties View Source alpha Declaration public alpha: number Property Value Type Description number View Source asMissionCreator Declaration public asMissionCreator: boolean Property Value Type Description boolean View Source bright Declaration public bright: boolean Property Value Type Description boolean View Source category Declaration public category: number Property Value Type Description number View Source color Declaration public color: number Property Value Type Description number View Source crewIndicatorVisible Declaration public crewIndicatorVisible: boolean Property Value Type Description boolean View Source flashInterval Declaration public flashInterval: number Property Value Type Description number View Source flashTimer Declaration public flashTimer: number Property Value Type Description number View Source flashes Declaration public flashes: boolean Property Value Type Description boolean View Source flashesAlternate Declaration public flashesAlternate: boolean Property Value Type Description boolean View Source friendIndicatorVisible Declaration public friendIndicatorVisible: boolean Property Value Type Description boolean View Source friendly Declaration public friendly: boolean Property Value Type Description boolean View Source gxtName Declaration public gxtName: string Property Value Type Description string View Source heading Declaration public heading: number Property Value Type Description number View Source headingIndicatorVisible Declaration public headingIndicatorVisible: boolean Property Value Type Description boolean View Source highDetail Declaration public highDetail: boolean Property Value Type Description boolean View Source name Declaration public name: string Property Value Type Description string View Source number Declaration public number: number Property Value Type Description number View Source outlineIndicatorVisible Declaration public outlineIndicatorVisible: boolean Property Value Type Description boolean View Source priority Declaration public priority: number Property Value Type Description number View Source pulse Declaration public pulse: boolean Property Value Type Description boolean View Source route Declaration public route: boolean Property Value Type Description boolean View Source routeColor Declaration public routeColor: number Property Value Type Description number View Source scale Declaration public scale: number Property Value Type Description number View Source secondaryColor Declaration public secondaryColor: number Property Value Type Description number View Source shortRange Declaration public shortRange: boolean Property Value Type Description boolean View Source showCone Declaration public showCone: boolean Property Value Type Description boolean View Source shrinked Declaration public shrinked: boolean Property Value Type Description boolean View Source sprite Declaration public sprite: number Property Value Type Description number View Source tickVisible Declaration public tickVisible: boolean Property Value Type Description boolean Methods View Source fade(number, number) Declaration fade(opacity: number, duration: number): void Parameters Type Name Description number opacity number duration"
  },
  "api/alt-client.Discord.html": {
    "href": "api/alt-client.Discord.html",
    "title": "Class Discord",
    "keywords": "Class Discord Module : alt-client Package : @altmp/altv-types Syntax class Discord Properties View Source currentUser Declaration public readonly static currentUser: IDiscordUser | null Property Value Type Description IDiscordUser | null Methods View Source requestOAuth2Token() Deprecated Declaration static requestOAuth2Token(): Promise<IDiscordOAuth2Token> Returns Type Description Promise< IDiscordOAuth2Token >"
  },
  "api/alt-client.Entity.html": {
    "href": "api/alt-client.Entity.html",
    "title": "Class Entity",
    "keywords": "Class Entity Inheritance BaseObject WorldObject Entity Inherited Members type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class Entity extends WorldObject Properties View Source id Entity unique id Declaration public readonly id: number Property Value Type Description number View Source model Hash of entity model Declaration public readonly model: number Property Value Type Description number View Source pos Object position Declaration public readonly pos: Vector3 Property Value Type Description Vector3 View Source rot Entity rotation in radians Declaration public readonly rot: Vector3 Property Value Type Description Vector3 View Source scriptID Internal game id that can be used in native calls Declaration public readonly scriptID: number Property Value Type Description number Methods View Source getStreamSyncedMeta(string) Gets a value using the specified key. Declaration getStreamSyncedMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source getSyncedMeta(string) Gets a value using the specified key. Declaration getSyncedMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source hasStreamSyncedMeta(string) Determines whether contains the specified key. Declaration hasStreamSyncedMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean Return is dependent on whether element associated with the specified key is stored. View Source hasSyncedMeta(string) Determines whether contains the specified key. Declaration hasSyncedMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean Return is dependent on whether element associated with the specified key is stored. View Source getByID(number) Retrieves the entity from the pool. Declaration static getByID(id: number): Entity | null Parameters Type Name Description number id The id of the entity. Returns Type Description Entity | null Entity if it was found, otherwise null. View Source getByScriptID(number) Retrieves the entity from the pool. Declaration static getByScriptID(scriptID: number): Entity | null Parameters Type Name Description number scriptID The script id of the entity. Returns Type Description Entity | null Entity if it was found, otherwise null."
  },
  "api/alt-client.File.html": {
    "href": "api/alt-client.File.html",
    "title": "Class File",
    "keywords": "Class File Module : alt-client Package : @altmp/altv-types Syntax class File Methods View Source exists(string) Determines whether file exists with the specified filename. Declaration static exists(filename: string): boolean Parameters Type Name Description string filename The name of the file. Returns Type Description boolean Return is dependent on whether file with the specified filename exists. View Source read(string, \"utf-8\" | \"utf-16\") Reads content of the file. Declaration static read(filename: string, encoding?: \"utf-8\" | \"utf-16\"): string Parameters Type Name Description string filename The name of the file. \"utf-8\" | \"utf-16\" encoding The encoding of the file. If not specified, it defaults to \"utf-8\". Returns Type Description string View Source read(string, \"binary\") Reads content of the file. Declaration static read(filename: string, encoding: \"binary\"): ArrayBuffer Parameters Type Name Description string filename The name of the file. \"binary\" encoding The encoding of the file. Returns Type Description ArrayBuffer"
  },
  "api/alt-client.HandlingData.html": {
    "href": "api/alt-client.HandlingData.html",
    "title": "Class HandlingData",
    "keywords": "Class HandlingData Module : alt-client Package : @altmp/altv-types Syntax class HandlingData Properties View Source acceleration Declaration public acceleration: number Property Value Type Description number View Source antiRollBarBiasFront Declaration public antiRollBarBiasFront: number Property Value Type Description number View Source antiRollBarBiasRear Declaration public antiRollBarBiasRear: number Property Value Type Description number View Source antiRollBarForce Declaration public antiRollBarForce: number Property Value Type Description number View Source brakeBiasFront Declaration public brakeBiasFront: number Property Value Type Description number View Source brakeBiasRear Declaration public brakeBiasRear: number Property Value Type Description number View Source breakForce Declaration public breakForce: number Property Value Type Description number View Source camberStiffnesss Declaration public camberStiffnesss: number Property Value Type Description number View Source centreOfMassOffset Declaration public centreOfMassOffset: Vector3 Property Value Type Description Vector3 View Source clutchChangeRateScaleDownShift Declaration public clutchChangeRateScaleDownShift: number Property Value Type Description number View Source clutchChangeRateScaleUpShift Declaration public clutchChangeRateScaleUpShift: number Property Value Type Description number View Source collisionDamageMult Declaration public collisionDamageMult: number Property Value Type Description number View Source damageFlags Declaration public damageFlags: number Property Value Type Description number View Source deformationDamageMult Declaration public deformationDamageMult: number Property Value Type Description number View Source downforceModifier Declaration public downforceModifier: number Property Value Type Description number View Source driveBiasFront Declaration public driveBiasFront: number Property Value Type Description number View Source driveInertia Declaration public driveInertia: number Property Value Type Description number View Source driveMaxFlatVel Declaration public driveMaxFlatVel: number Property Value Type Description number View Source engineDamageMult Declaration public engineDamageMult: number Property Value Type Description number View Source handBrakeForce Declaration public handBrakeForce: number Property Value Type Description number View Source handlingFlags Declaration public handlingFlags: number Property Value Type Description number View Source handlingNameHash Declaration public readonly handlingNameHash: number Property Value Type Description number View Source inertiaMultiplier Declaration public inertiaMultiplier: Vector3 Property Value Type Description Vector3 View Source initialDragCoeff Declaration public initialDragCoeff: number Property Value Type Description number View Source initialDriveForce Declaration public initialDriveForce: number Property Value Type Description number View Source initialDriveGears Declaration public initialDriveGears: number Property Value Type Description number View Source initialDriveMaxFlatVel Declaration public initialDriveMaxFlatVel: number Property Value Type Description number View Source lowSpeedTractionLossMult Declaration public lowSpeedTractionLossMult: number Property Value Type Description number View Source mass Declaration public mass: number Property Value Type Description number View Source modelFlags Declaration public modelFlags: number Property Value Type Description number View Source monetaryValue Declaration public monetaryValue: number Property Value Type Description number View Source oilVolume Declaration public oilVolume: number Property Value Type Description number View Source percentSubmerged Declaration public percentSubmerged: number Property Value Type Description number View Source percentSubmergedRatio Declaration public percentSubmergedRatio: number Property Value Type Description number View Source petrolTankVolume Declaration public petrolTankVolume: number Property Value Type Description number View Source rollCentreHeightFront Declaration public rollCentreHeightFront: number Property Value Type Description number View Source rollCentreHeightRear Declaration public rollCentreHeightRear: number Property Value Type Description number View Source seatOffsetDistX Declaration public seatOffsetDistX: number Property Value Type Description number View Source seatOffsetDistY Declaration public seatOffsetDistY: number Property Value Type Description number View Source seatOffsetDistZ Declaration public seatOffsetDistZ: number Property Value Type Description number View Source steeringLock Declaration public steeringLock: number Property Value Type Description number View Source steeringLockRatio Declaration public steeringLockRatio: number Property Value Type Description number View Source suspensionBiasFront Declaration public suspensionBiasFront: number Property Value Type Description number View Source suspensionBiasRear Declaration public suspensionBiasRear: number Property Value Type Description number View Source suspensionCompDamp Declaration public suspensionCompDamp: number Property Value Type Description number View Source suspensionForce Declaration public suspensionForce: number Property Value Type Description number View Source suspensionLowerLimit Declaration public suspensionLowerLimit: number Property Value Type Description number View Source suspensionRaise Declaration public suspensionRaise: number Property Value Type Description number View Source suspensionReboundDamp Declaration public suspensionReboundDamp: number Property Value Type Description number View Source suspensionUpperLimit Declaration public suspensionUpperLimit: number Property Value Type Description number View Source tractionBiasFront Declaration public tractionBiasFront: number Property Value Type Description number View Source tractionBiasRear Declaration public tractionBiasRear: number Property Value Type Description number View Source tractionCurveLateral Declaration public tractionCurveLateral: number Property Value Type Description number View Source tractionCurveLateralRatio Declaration public tractionCurveLateralRatio: number Property Value Type Description number View Source tractionCurveMax Declaration public tractionCurveMax: number Property Value Type Description number View Source tractionCurveMaxRatio Declaration public tractionCurveMaxRatio: number Property Value Type Description number View Source tractionCurveMin Declaration public tractionCurveMin: number Property Value Type Description number View Source tractionCurveMinRatio Declaration public tractionCurveMinRatio: number Property Value Type Description number View Source tractionLossMult Declaration public tractionLossMult: number Property Value Type Description number View Source tractionSpringDeltaMax Declaration public tractionSpringDeltaMax: number Property Value Type Description number View Source tractionSpringDeltaMaxRatio Declaration public tractionSpringDeltaMaxRatio: number Property Value Type Description number View Source unkFloat1 Declaration public unkFloat1: number Property Value Type Description number View Source unkFloat2 Declaration public unkFloat2: number Property Value Type Description number View Source unkFloat4 Declaration public unkFloat4: number Property Value Type Description number View Source unkFloat5 Declaration public unkFloat5: number Property Value Type Description number View Source weaponDamageMult Declaration public weaponDamageMult: number Property Value Type Description number Methods View Source getForModel(number) Declaration static getForModel(handlingHash: number): HandlingData Parameters Type Name Description number handlingHash Returns Type Description HandlingData"
  },
  "api/alt-client.html": {
    "href": "api/alt-client.html",
    "title": "Module alt-client",
    "keywords": "Module alt-client Package : @altmp/altv-types Classes AreaBlip BaseObject Blip Discord Entity File HandlingData LocalStorage MapZoomData MemoryBuffer Player PointBlip RGBA RadiusBlip Vector3 Vehicle WebView WorldObject Interfaces IDiscordOAuth2Token IDiscordUser IVector2 IVector3 Functions View Source addGxtText(string, string) Declaration addGxtText(key: string, value: string): void Parameters Type Name Description string key string value View Source beginScaleformMovieMethodMinimap(string) Declaration beginScaleformMovieMethodMinimap(methodName: string): boolean Parameters Type Name Description string methodName Returns Type Description boolean View Source clearEveryTick(number) Clears a timer set with the everyTick(() => void) function. Declaration clearEveryTick(id: number): void Parameters Type Name Description number id The id of a timer. View Source clearInterval(number) Clears a timer set with the setInterval(() => void, number) function. Declaration clearInterval(id: number): void Parameters Type Name Description number id The id of a timer. View Source clearNextTick(number) Clears a timer set with the nextTick(() => void) function. Declaration clearNextTick(id: number): void Parameters Type Name Description number id The id of a timer. View Source clearTimeout(number) Clears a timer set with the setTimeout(() => void, number) function. Declaration clearTimeout(id: number): void Parameters Type Name Description number id The id of a timer. View Source deleteMeta(string) Removes the specified key. Declaration deleteMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source emit(string, any[]) Emits specified event across client resources. Declaration emit(name: string, ...args: any[]): void Parameters Type Name Description string name any[] args Rest parameters for emit to send. View Source emitServer(string, any[]) Emits specified event to server. Declaration emitServer(name: string, ...args: any[]): void Parameters Type Name Description string name any[] args Rest parameters for emit to send. View Source everyTick(() => void) Schedules execution of handler on every frame. Declaration everyTick(handler: () => void): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearEveryTick(number) function to cancel the timer. View Source gameControlsEnabled() Declaration gameControlsEnabled(): boolean Returns Type Description boolean View Source getCursorPos() Declaration getCursorPos(): IVector2 Returns Type Description IVector2 View Source getGxtText(string) Declaration getGxtText(key: string): string Parameters Type Name Description string key Returns Type Description string View Source getLicenseHash() Declaration getLicenseHash(): string Returns Type Description string View Source getLocale() Declaration getLocale(): string Returns Type Description string View Source getMeta(string) Gets a value using the specified key. Declaration getMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source getMsPerGameMinute() Declaration getMsPerGameMinute(): number Returns Type Description number View Source getStat(StatName) Gets a value of the specified statistic. Declaration getStat(statName: StatName): number Parameters Type Name Description StatName statName Name of the statistic. Returns Type Description number View Source getSyncedMeta(string) Gets a value using the specified key. Declaration getSyncedMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source hasMeta(string) Determines whether contains the specified key. Declaration hasMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean True when element associated with the specified key is stored. View Source hasSyncedMeta(string) Determines whether contains the specified key. Declaration hasSyncedMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean Return is dependent on whether element associated with the specified key is stored. View Source hash(string) Creates a hash using Jenkins one-at-a-time algorithm. Declaration hash(str: string): number Parameters Type Name Description string str A string from which hash will be created. Returns Type Description number View Source isConsoleOpen() Returns state of console window. Declaration isConsoleOpen(): boolean Returns Type Description boolean True when console window is opened. View Source isInSandbox() Sandbox mode Declaration isInSandbox(): boolean Returns Type Description boolean True when alt:V client is launched in sandbox mode. View Source isMenuOpen() Returns state of user interface and console window. Declaration isMenuOpen(): boolean Returns Type Description boolean True when user interface or console window is opened. View Source isTextureExistInArchetype(number, string) Declaration isTextureExistInArchetype(modelHash: number, modelName: string): boolean Parameters Type Name Description number modelHash string modelName Returns Type Description boolean View Source log(any[]) Declaration log(...args: any[]): void Parameters Type Name Description any[] args View Source logError(any[]) Declaration logError(...args: any[]): void Parameters Type Name Description any[] args View Source logWarning(any[]) Declaration logWarning(...args: any[]): void Parameters Type Name Description any[] args View Source nextTick(() => void) Schedules execution of handler on next frame. Declaration nextTick(handler: () => void): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearNextTick(number) function to cancel the timer. View Source off(string, (...args: any[]) => void) Unsubscribes from client event handler with specified listener. Declaration off(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be removed. Remarks Listener should be of the same reference as when event was subscribed. View Source offServer(string, (...args: any[]) => void) Unsubscribes from server event handler with specified listener. Declaration offServer(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be removed. Remarks Listener should be of the same reference as when event was subscribed. View Source on(string, (...args: any[]) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be added. View Source on(\"anyResourceError\", (resourceName: string) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"anyResourceError\", listener: (resourceName: string) => void): void Parameters Type Name Description \"anyResourceError\" eventName Name of the event. (resourceName: string) => void listener Listener that should be added. View Source on(\"anyResourceStart\", (resourceName: string) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"anyResourceStart\", listener: (resourceName: string) => void): void Parameters Type Name Description \"anyResourceStart\" eventName Name of the event. (resourceName: string) => void listener Listener that should be added. View Source on(\"anyResourceStop\", (resourceName: string) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"anyResourceStop\", listener: (resourceName: string) => void): void Parameters Type Name Description \"anyResourceStop\" eventName Name of the event. (resourceName: string) => void listener Listener that should be added. View Source on(\"connectionComplete\", () => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"connectionComplete\", listener: () => void): void Parameters Type Name Description \"connectionComplete\" eventName Name of the event. () => void listener Listener that should be added. View Source on(\"consoleCommand\", (name: string, ...args: string[]) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"consoleCommand\", listener: (name: string, ...args: string[]) => void): void Parameters Type Name Description \"consoleCommand\" eventName Name of the event. (name: string, ...args: string[]) => void listener Listener that should be added. View Source on(\"disconnect\", () => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"disconnect\", listener: () => void): void Parameters Type Name Description \"disconnect\" eventName Name of the event. () => void listener Listener that should be added. View Source on(\"gameEntityCreate\", (entity: Entity) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"gameEntityCreate\", listener: (entity: Entity) => void): void Parameters Type Name Description \"gameEntityCreate\" eventName Name of the event. (entity: Entity) => void listener Listener that should be added. View Source on(\"gameEntityDestroy\", (entity: Entity) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"gameEntityDestroy\", listener: (entity: Entity) => void): void Parameters Type Name Description \"gameEntityDestroy\" eventName Name of the event. (entity: Entity) => void listener Listener that should be added. View Source on(\"keydown\", (key: number) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"keydown\", listener: (key: number) => void): void Parameters Type Name Description \"keydown\" eventName Name of the event. (key: number) => void listener Listener that should be added. View Source on(\"keyup\", (key: number) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"keyup\", listener: (key: number) => void): void Parameters Type Name Description \"keyup\" eventName Name of the event. (key: number) => void listener Listener that should be added. View Source on(\"removeEntity\", (object: BaseObject) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"removeEntity\", listener: (object: BaseObject) => void): void Parameters Type Name Description \"removeEntity\" eventName Name of the event. (object: BaseObject) => void listener Listener that should be added. View Source on(\"resourceStart\", (errored: boolean) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"resourceStart\", listener: (errored: boolean) => void): void Parameters Type Name Description \"resourceStart\" eventName Name of the event. (errored: boolean) => void listener Listener that should be added. View Source on(\"resourceStop\", () => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"resourceStop\", listener: () => void): void Parameters Type Name Description \"resourceStop\" eventName Name of the event. () => void listener Listener that should be added. View Source on(\"syncedMetaChange\", (entity: Entity, key: string, value: any, oldValue: any) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"syncedMetaChange\", listener: (entity: Entity, key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"syncedMetaChange\" eventName Name of the event. (entity: Entity, key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"streamSyncedMetaChange\", (entity: Entity, key: string, value: any, oldValue: any) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"streamSyncedMetaChange\", listener: (entity: Entity, key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"streamSyncedMetaChange\" eventName Name of the event. (entity: Entity, key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"globalMetaChange\", (key: string, value: any, oldValue: any) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"globalMetaChange\", listener: (key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"globalMetaChange\" eventName Name of the event. (key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"globalSyncedMetaChange\", (key: string, value: any, oldValue: any) => void) Subscribes to client event handler with specified listener. Declaration on(eventName: \"globalSyncedMetaChange\", listener: (key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"globalSyncedMetaChange\" eventName Name of the event. (key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source onServer(string, (...args: any[]) => void) Subscribes to client event handler with specified listener. Declaration onServer(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be added. View Source removeGxtText(string) Declaration removeGxtText(key: string): void Parameters Type Name Description string key View Source removeIpl(string) Declaration removeIpl(iplName: string): void Parameters Type Name Description string iplName View Source requestIpl(string) Declaration requestIpl(iplName: string): void Parameters Type Name Description string iplName View Source resetStat(StatName) Resets a statistic to its default value. Declaration resetStat(statName: StatName): void Parameters Type Name Description StatName statName Name of the statistic. View Source saveScreenshot(string) Output is saved to screenshots folder in root directory. Declaration saveScreenshot(stem: string): boolean Parameters Type Name Description string stem Filename without extension. Returns Type Description boolean Return is dependent on the success of the operation. Remarks Only available in sandbox mode. View Source setCamFrozen(boolean) Declaration setCamFrozen(state: boolean): void Parameters Type Name Description boolean state View Source setCursorPos(IVector2) Declaration setCursorPos(pos: IVector2): void Parameters Type Name Description IVector2 pos View Source setInterval(() => void, number) Schedules execution of handler in specified intervals. Declaration setInterval(handler: () => void, miliseconds: number): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. number miliseconds The time, in milliseconds, between execution of specified handler. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearInterval(number) function to cancel the timer. View Source setMeta(string, any) Stores the given value with the specified key. Declaration setMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared locally to all resources. View Source setModel(string) Declaration setModel(modelName: string): void Parameters Type Name Description string modelName View Source setMsPerGameMinute(number) Declaration setMsPerGameMinute(miliseconds: number): void Parameters Type Name Description number miliseconds View Source setStat(StatName, number) Sets a statistic to desired value. Declaration setStat(statName: StatName, value: number): void Parameters Type Name Description StatName statName Name of the statistic. number value Value of the statistic you want to set. View Source setTimeout(() => void, number) Schedules execution of handler once after the expiration of interval. Declaration setTimeout(handler: () => void, miliseconds: number): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. number miliseconds The time, in milliseconds, before execution of specified handler. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearTimeout(number) function to cancel the timer. View Source setWeatherCycle(Array<any>, Array<any>) Declaration setWeatherCycle(weathers: Array<any>, multipliers: Array<any>): void Parameters Type Name Description Array<any> weathers Array<any> multipliers View Source setWeatherSyncActive(boolean) Declaration setWeatherSyncActive(isActive: boolean): void Parameters Type Name Description boolean isActive View Source showCursor(boolean) Changes the visibility of cursor. Declaration showCursor(state: boolean): void Parameters Type Name Description boolean state A boolean indicating whenever cursor should be visible or not. Remarks This is handled by resource scoped internal integer, which gets increased/decreased by every function call. When you show your cursor 5 times, to hide it you have to do that 5 times accordingly. View Source toggleGameControls(boolean) Declaration toggleGameControls(state: boolean): void Parameters Type Name Description boolean state View Source toggleVoiceControls(boolean) Declaration toggleVoiceControls(state: boolean): void Parameters Type Name Description boolean state Type Aliases View Source StatName Declaration type StatName = \"stamina\" | \"strength\" | \"lung_capacity\" | \"wheelie_ability\" | \"flying_ability\" | \"shooting_ability\" | \"stealth_ability\""
  },
  "api/alt-client.IDiscordOAuth2Token.html": {
    "href": "api/alt-client.IDiscordOAuth2Token.html",
    "title": "Interface IDiscordOAuth2Token",
    "keywords": "Interface IDiscordOAuth2Token Module : alt-client Package : @altmp/altv-types Syntax interface IDiscordOAuth2Token Properties View Source expires Declaration public readonly expires: number Property Value Type Description number View Source scopes Declaration public readonly scopes: string Property Value Type Description string View Source token Declaration public readonly token: string Property Value Type Description string"
  },
  "api/alt-client.IDiscordUser.html": {
    "href": "api/alt-client.IDiscordUser.html",
    "title": "Interface IDiscordUser",
    "keywords": "Interface IDiscordUser Module : alt-client Package : @altmp/altv-types Syntax interface IDiscordUser Properties View Source avatar Declaration public readonly avatar: string Property Value Type Description string View Source discriminator Declaration public readonly discriminator: string Property Value Type Description string View Source id Declaration public readonly id: string Property Value Type Description string View Source name Declaration public readonly name: string Property Value Type Description string"
  },
  "api/alt-client.IVector2.html": {
    "href": "api/alt-client.IVector2.html",
    "title": "Interface IVector2",
    "keywords": "Interface IVector2 Module : alt-client Package : @altmp/altv-types Syntax interface IVector2 Properties View Source x Declaration public readonly x: number Property Value Type Description number View Source y Declaration public readonly y: number Property Value Type Description number"
  },
  "api/alt-client.IVector3.html": {
    "href": "api/alt-client.IVector3.html",
    "title": "Interface IVector3",
    "keywords": "Interface IVector3 Module : alt-client Package : @altmp/altv-types Syntax interface IVector3 Properties View Source x Declaration public readonly x: number Property Value Type Description number View Source y Declaration public readonly y: number Property Value Type Description number View Source z Declaration public readonly z: number Property Value Type Description number"
  },
  "api/alt-client.LocalStorage.html": {
    "href": "api/alt-client.LocalStorage.html",
    "title": "Class LocalStorage",
    "keywords": "Class LocalStorage Module : alt-client Package : @altmp/altv-types Syntax class LocalStorage Methods View Source delete(string) Declaration delete(key: string): void Parameters Type Name Description string key View Source deleteAll() Declaration deleteAll(): void View Source get() Declaration static get(): LocalStorage Returns Type Description LocalStorage View Source save() Declaration save(): void View Source set(string, any) Declaration set(key: string, value: any): void Parameters Type Name Description string key any value View Source get() Declaration static get(): LocalStorage Returns Type Description LocalStorage"
  },
  "api/alt-client.MapZoomData.html": {
    "href": "api/alt-client.MapZoomData.html",
    "title": "Class MapZoomData",
    "keywords": "Class MapZoomData Module : alt-client Package : @altmp/altv-types Syntax class MapZoomData Properties View Source fScrollSpeed Declaration public fScrollSpeed: number Property Value Type Description number View Source fZoomScale Declaration public fZoomScale: number Property Value Type Description number View Source fZoomSpeed Declaration public fZoomSpeed: number Property Value Type Description number View Source vTilesX Declaration public vTilesX: number Property Value Type Description number View Source vTilesY Declaration public vTilesY: number Property Value Type Description number Methods View Source reset() Declaration reset(): void View Source get(string) Declaration static get(zoomData: string): MapZoomData Parameters Type Name Description string zoomData Returns Type Description MapZoomData View Source resetAll() Declaration static resetAll(): void"
  },
  "api/alt-client.MemoryBuffer.html": {
    "href": "api/alt-client.MemoryBuffer.html",
    "title": "Class MemoryBuffer",
    "keywords": "Class MemoryBuffer Module : alt-client Package : @altmp/altv-types Syntax class MemoryBuffer Constructors View Source MemoryBuffer(number) Declaration public MemoryBuffer(size: number): MemoryBuffer Parameters Type Name Description number size Methods View Source byte(number) Declaration byte(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source double(number) Declaration double(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source float(number) Declaration float(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source free() Declaration free(): boolean Returns Type Description boolean View Source int(number) Declaration int(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source long(number) Declaration long(offset: number): bigint Parameters Type Name Description number offset Returns Type Description bigint View Source short(number) Declaration short(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source string(number, number) Declaration string(offset: number, length: number): string Parameters Type Name Description number offset number length Returns Type Description string View Source ubyte(number) Declaration ubyte(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source uint(number) Declaration uint(offset: number): number Parameters Type Name Description number offset Returns Type Description number View Source ulong(number) Declaration ulong(offset: number): bigint Parameters Type Name Description number offset Returns Type Description bigint View Source ushort(number) Declaration ushort(offset: number): number Parameters Type Name Description number offset Returns Type Description number"
  },
  "api/alt-client.Player.html": {
    "href": "api/alt-client.Player.html",
    "title": "Class Player",
    "keywords": "Class Player Inheritance BaseObject WorldObject Entity Player Inherited Members id model pos rot scriptID type valid deleteMeta(string) destroy() getMeta(string) getStreamSyncedMeta(string) getSyncedMeta(string) hasMeta(string) hasStreamSyncedMeta(string) hasSyncedMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class Player extends Entity Properties View Source isTalking Player talking state Declaration public readonly isTalking: boolean Property Value Type Description boolean View Source micLevel Player talking volume Declaration public readonly micLevel: number Property Value Type Description number View Source name Player name Declaration public readonly name: string Property Value Type Description string View Source vehicle Player's vehicle, null if player is not in any vehicle Declaration public readonly vehicle: Vehicle | null Property Value Type Description Vehicle | null View Source all Array with all players Declaration public readonly static all: Array<Player> Property Value Type Description Array< Player > View Source local Local player Declaration public readonly static local: Player Property Value Type Description Player Methods View Source getByID(number) Retrieves the player from the pool. Declaration static getByID(id: number): Player | null Parameters Type Name Description number id The id of the player. Returns Type Description Player | null Entity if it was found, otherwise null. View Source getByScriptID(number) Retrieves the player from the pool. Declaration static getByScriptID(scriptID: number): Player | null Parameters Type Name Description number scriptID The script id of the player. Returns Type Description Player | null Entity if it was found, otherwise null."
  },
  "api/alt-client.PointBlip.html": {
    "href": "api/alt-client.PointBlip.html",
    "title": "Class PointBlip",
    "keywords": "Class PointBlip Inheritance BaseObject WorldObject Blip PointBlip Inherited Members alpha asMissionCreator bright category color crewIndicatorVisible flashInterval flashTimer flashes flashesAlternate friendIndicatorVisible friendly gxtName heading headingIndicatorVisible highDetail name number outlineIndicatorVisible pos priority pulse route routeColor scale secondaryColor shortRange showCone shrinked sprite tickVisible type valid deleteMeta(string) destroy() fade(number, number) getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class PointBlip extends Blip Constructors View Source PointBlip(number, number, number) Declaration public PointBlip(x: number, y: number, z: number): PointBlip Parameters Type Name Description number x number y number z"
  },
  "api/alt-client.RadiusBlip.html": {
    "href": "api/alt-client.RadiusBlip.html",
    "title": "Class RadiusBlip",
    "keywords": "Class RadiusBlip Inheritance BaseObject WorldObject Blip RadiusBlip Inherited Members alpha asMissionCreator bright category color crewIndicatorVisible flashInterval flashTimer flashes flashesAlternate friendIndicatorVisible friendly gxtName heading headingIndicatorVisible highDetail name number outlineIndicatorVisible pos priority pulse route routeColor scale secondaryColor shortRange showCone shrinked sprite tickVisible type valid deleteMeta(string) destroy() fade(number, number) getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class RadiusBlip extends Blip Constructors View Source RadiusBlip(number, number, number, number) Declaration public RadiusBlip(x: number, y: number, z: number, radius: number): RadiusBlip Parameters Type Name Description number x number y number z number radius"
  },
  "api/alt-client.RGBA.html": {
    "href": "api/alt-client.RGBA.html",
    "title": "Class RGBA",
    "keywords": "Class RGBA Module : alt-client Package : @altmp/altv-types Syntax class RGBA Constructors View Source RGBA(number, number, number, number) Declaration public RGBA(r: number, g: number, b: number, a: number): RGBA Parameters Type Name Description number r An r component. number g An g component. number b An b component. number a An a component. Properties View Source a a component of RGBA Declaration public a: number Property Value Type Description number View Source b b component of RGBA Declaration public b: number Property Value Type Description number View Source g g component of RGBA Declaration public g: number Property Value Type Description number View Source r r component of RGBA Declaration public r: number Property Value Type Description number"
  },
  "api/alt-client.Vector3.html": {
    "href": "api/alt-client.Vector3.html",
    "title": "Class Vector3",
    "keywords": "Class Vector3 Module : alt-client Package : @altmp/altv-types Syntax class Vector3 Constructors View Source Vector3(number, number, number) Declaration public Vector3(x: number, y: number, z: number): Vector3 Parameters Type Name Description number x number y number z View Source Vector3(number[]) Declaration public Vector3(arr: number[]): Vector3 Parameters Type Name Description number[] arr View Source Vector3(IVector3) Declaration public Vector3(obj: IVector3): Vector3 Parameters Type Name Description IVector3 obj Properties View Source x Declaration public readonly x: number Property Value Type Description number View Source y Declaration public readonly y: number Property Value Type Description number View Source z Declaration public readonly z: number Property Value Type Description number"
  },
  "api/alt-client.Vehicle.html": {
    "href": "api/alt-client.Vehicle.html",
    "title": "Class Vehicle",
    "keywords": "Class Vehicle Inheritance BaseObject WorldObject Entity Vehicle Inherited Members id model pos rot scriptID type valid deleteMeta(string) destroy() getMeta(string) getStreamSyncedMeta(string) getSyncedMeta(string) hasMeta(string) hasStreamSyncedMeta(string) hasSyncedMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class Vehicle extends Entity Properties View Source gear Vehicle gear Declaration public gear: number Property Value Type Description number View Source rpm Vehicle RPM [0, 1] Declaration public readonly rpm: number Property Value Type Description number View Source speed Vehicle wheel speed Declaration public readonly speed: number Property Value Type Description number View Source speedVector Vehicle wheel speed vector Declaration public readonly speedVector: Vector3 Property Value Type Description Vector3 View Source wheelsCount Vehicle wheel count Declaration public readonly wheelsCount: number Property Value Type Description number View Source all Array with all vehicles Declaration public readonly static all: Array<Vehicle> Property Value Type Description Array< Vehicle > Methods View Source getByID(number) Retrieves the vehicle from the pool. Declaration static getByID(id: number): Vehicle | null Parameters Type Name Description number id The id of the vehicle. Returns Type Description Vehicle | null Entity if it was found, otherwise null. View Source getByScriptID(number) Retrieves the vehicle from the pool. Declaration static getByScriptID(scriptID: number): Vehicle | null Parameters Type Name Description number scriptID The script id of the vehicle. Returns Type Description Vehicle | null Entity if it was found, otherwise null."
  },
  "api/alt-client.WebView.html": {
    "href": "api/alt-client.WebView.html",
    "title": "Class WebView",
    "keywords": "Class WebView Inheritance BaseObject WebView Inherited Members type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class WebView extends BaseObject Constructors View Source WebView(string, boolean) Creates a fullscreen WebView. Declaration public WebView(url: string, isOverlay?: boolean): WebView Parameters Type Name Description string url URL. boolean isOverlay true to render as overlay, false to render on game's GUI stage View Source WebView(string, number, string) Creates a WebView rendered on game object. Declaration public WebView(url: string, propHash: number, targetTexture: string): WebView Parameters Type Name Description string url URL. number propHash Hash of object to render on. string targetTexture Name of object's texture to replace. Properties View Source isVisible View visibility state Declaration public isVisible: boolean Property Value Type Description boolean View Source url View URL Declaration public url: string Property Value Type Description string Methods View Source emit(string, any[]) Emits specified event across particular WebView. Declaration emit(eventName: string, ...args: any[]): void Parameters Type Name Description string eventName Name of the event. any[] args Rest parameters for emit to send. View Source focus() Declaration focus(): void View Source off(string, (...args: any[]) => void) Unsubscribes from WebView event handler with specified listener. Declaration off(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be removed. Remarks Listener should be of the same reference as when event was subscribed. View Source on(string, (...args: any[]) => void) Subscribes to WebView event handler with specified listener. Declaration on(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be added. View Source on(\"load\", () => void) Subscribes to WebView event handler with specified listener. Declaration on(eventName: \"load\", listener: () => void): void Parameters Type Name Description \"load\" eventName Name of the event. () => void listener Listener that should be added. View Source unfocus() Declaration unfocus(): void"
  },
  "api/alt-client.WorldObject.html": {
    "href": "api/alt-client.WorldObject.html",
    "title": "Class WorldObject",
    "keywords": "Class WorldObject Inheritance BaseObject WorldObject Inherited Members type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-client Package : @altmp/altv-types Syntax class WorldObject extends BaseObject Properties View Source pos Object position Declaration public pos: Vector3 Property Value Type Description Vector3"
  },
  "api/alt-server.BaseObject.html": {
    "href": "api/alt-server.BaseObject.html",
    "title": "Class BaseObject",
    "keywords": "Class BaseObject Module : alt-server Package : @altmp/altv-types Syntax class BaseObject Properties View Source type Type of the object. Declaration public readonly type: number Property Value Type Description number View Source valid Object usability. Declaration public readonly valid: boolean Property Value Type Description boolean Methods View Source deleteMeta(string) Removes the specified key. Declaration deleteMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source destroy() Removes the object from the world. Declaration destroy(): void View Source getMeta(string) Gets a value using the specified key. Declaration getMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source hasMeta(string) Determines whether contains the specified key. Declaration hasMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean True when element associated with the specified key is stored. View Source setMeta(string, any) Stores the given value with the specified key. Declaration setMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared locally."
  },
  "api/alt-server.Blip.html": {
    "href": "api/alt-server.Blip.html",
    "title": "Class Blip",
    "keywords": "Class Blip Inheritance BaseObject WorldObject Blip Inherited Members dimension pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class Blip extends WorldObject"
  },
  "api/alt-server.Checkpoint.html": {
    "href": "api/alt-server.Checkpoint.html",
    "title": "Class Checkpoint",
    "keywords": "Class Checkpoint Inheritance BaseObject WorldObject Colshape Checkpoint Inherited Members colshapeType dimension playersOnly pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) isEntityIn(Entity) isPointIn(Vector3) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class Checkpoint extends Colshape Constructors View Source Checkpoint(number, number, number, number, number, number, number, number, number, number) Declaration public Checkpoint(type: number, x: number, y: number, z: number, radius: number, height: number, r: number, g: number, b: number, a: number): Checkpoint Parameters Type Name Description number type number x number y number z number radius number height number r number g number b number a"
  },
  "api/alt-server.Colshape.html": {
    "href": "api/alt-server.Colshape.html",
    "title": "Class Colshape",
    "keywords": "Class Colshape Inheritance BaseObject WorldObject Colshape Inherited Members dimension pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class Colshape extends WorldObject Properties View Source colshapeType Declaration public colshapeType: number Property Value Type Description number View Source playersOnly Declaration public playersOnly: boolean Property Value Type Description boolean Methods View Source isEntityIn(Entity) Declaration isEntityIn(entity: Entity): boolean Parameters Type Name Description Entity entity Returns Type Description boolean View Source isPointIn(Vector3) Declaration isPointIn(position: Vector3): boolean Parameters Type Name Description Vector3 position Returns Type Description boolean"
  },
  "api/alt-server.ColshapeCircle.html": {
    "href": "api/alt-server.ColshapeCircle.html",
    "title": "Class ColshapeCircle",
    "keywords": "Class ColshapeCircle Inheritance BaseObject WorldObject Colshape ColshapeCircle Inherited Members colshapeType dimension playersOnly pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) isEntityIn(Entity) isPointIn(Vector3) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class ColshapeCircle extends Colshape Constructors View Source ColshapeCircle(number, number, number) Declaration public ColshapeCircle(x: number, y: number, radius: number): ColshapeCircle Parameters Type Name Description number x number y number radius"
  },
  "api/alt-server.ColshapeCuboid.html": {
    "href": "api/alt-server.ColshapeCuboid.html",
    "title": "Class ColshapeCuboid",
    "keywords": "Class ColshapeCuboid Inheritance BaseObject WorldObject Colshape ColshapeCuboid Inherited Members colshapeType dimension playersOnly pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) isEntityIn(Entity) isPointIn(Vector3) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class ColshapeCuboid extends Colshape Constructors View Source ColshapeCuboid(number, number, number, number, number, number) Declaration public ColshapeCuboid(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): ColshapeCuboid Parameters Type Name Description number x1 number y1 number z1 number x2 number y2 number z2"
  },
  "api/alt-server.ColshapeCylinder.html": {
    "href": "api/alt-server.ColshapeCylinder.html",
    "title": "Class ColshapeCylinder",
    "keywords": "Class ColshapeCylinder Inheritance BaseObject WorldObject Colshape ColshapeCylinder Inherited Members colshapeType dimension playersOnly pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) isEntityIn(Entity) isPointIn(Vector3) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class ColshapeCylinder extends Colshape Constructors View Source ColshapeCylinder(number, number, number, number, number) Declaration public ColshapeCylinder(x: number, y: number, z: number, radius: number, height: number): ColshapeCylinder Parameters Type Name Description number x number y number z number radius number height"
  },
  "api/alt-server.ColshapeRectangle.html": {
    "href": "api/alt-server.ColshapeRectangle.html",
    "title": "Class ColshapeRectangle",
    "keywords": "Class ColshapeRectangle Inheritance BaseObject WorldObject Colshape ColshapeRectangle Inherited Members colshapeType dimension playersOnly pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) isEntityIn(Entity) isPointIn(Vector3) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class ColshapeRectangle extends Colshape Constructors View Source ColshapeRectangle(number, number, number, number) Declaration public ColshapeRectangle(x1: number, y1: number, x2: number, y2: number): ColshapeRectangle Parameters Type Name Description number x1 number y1 number x2 number y2"
  },
  "api/alt-server.ColshapeSphere.html": {
    "href": "api/alt-server.ColshapeSphere.html",
    "title": "Class ColshapeSphere",
    "keywords": "Class ColshapeSphere Inheritance BaseObject WorldObject Colshape ColshapeSphere Inherited Members colshapeType dimension playersOnly pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) isEntityIn(Entity) isPointIn(Vector3) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class ColshapeSphere extends Colshape Constructors View Source ColshapeSphere(number, number, number, number) Declaration public ColshapeSphere(x: number, y: number, z: number, radius: number): ColshapeSphere Parameters Type Name Description number x number y number z number radius"
  },
  "api/alt-server.Entity.html": {
    "href": "api/alt-server.Entity.html",
    "title": "Class Entity",
    "keywords": "Class Entity Inheritance BaseObject WorldObject Entity Inherited Members dimension pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class Entity extends WorldObject Properties View Source id Internal identificator of the entity which is identical on both sides. Declaration public readonly id: number Property Value Type Description number View Source model Entity model hash. Declaration public model: number | string Property Value Type Description number | string Remarks Only setter accepts string or number as input, getter returns value as number. View Source netOwner Network owner of the entity. Declaration public readonly netOwner: Player | null Property Value Type Description Player | null Remarks Network owner is responsible for syncing entity with the server. It changes when actual network owner passes the migration range, then the new one is determined based on distance from the entity (if entity is a vehicle, then the driver will take priority for becoming network owner). Disabling migration range will stop this process from happening until turned on again. View Source rot Entity rotation. Declaration public rot: Vector3 Property Value Type Description Vector3 Remarks Values are provided in radians . Methods View Source deleteStreamSyncedMeta(string) Removes the specified key. Declaration deleteStreamSyncedMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source deleteSyncedMeta(string) Removes the specified key. Declaration deleteSyncedMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source getStreamSyncedMeta(string) Gets a value using the specified key. Declaration getStreamSyncedMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source getSyncedMeta(string) Gets a value using the specified key. Declaration getSyncedMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source hasStreamSyncedMeta(string) Determines whether contains the specified key. Declaration hasStreamSyncedMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean Return is dependent on whether element associated with the specified key is stored. View Source hasSyncedMeta(string) Determines whether contains the specified key. Declaration hasSyncedMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean Return is dependent on whether element associated with the specified key is stored. View Source resetNetOwner(boolean) Resets overwritten network owner. Declaration resetNetOwner(disableMigration?: boolean): void Parameters Type Name Description boolean disableMigration Pass true to disable migration, false to keep it enabled. If not specified, it defaults to \"false\". Remarks See netOwner to understand how network owner works. Keep in mind that disabling migration can lead to unexpected behaviour when the network owner gets out of the streaming range. View Source setNetOwner(Player, boolean) Changes network owner to the specified player. Declaration setNetOwner(player: Player, disableMigration?: boolean): void Parameters Type Name Description Player player The given player that will be set as new network owner. boolean disableMigration Pass true to disable migration, false to keep it enabled. If not specified, it defaults to \"false\". Remarks See netOwner to understand how network owner works. Keep in mind that disabling migration can lead to unexpected behaviour when the network owner gets out of the streaming range. View Source setStreamSyncedMeta(string, any) Stores the given value with the specified key. Declaration setStreamSyncedMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared with all clients in streaming range. View Source setSyncedMeta(string, any) Stores the given value with the specified key. Declaration setSyncedMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared with all clients. View Source getByID(number) Retrieves the entity from the pool. Declaration static getByID(id: number): Entity | null Parameters Type Name Description number id The id of the entity. Returns Type Description Entity | null Entity if it was found, otherwise null."
  },
  "api/alt-server.File.html": {
    "href": "api/alt-server.File.html",
    "title": "Class File",
    "keywords": "Class File Module : alt-server Package : @altmp/altv-types Syntax class File Methods View Source exists(string) Determines whether file exists with the specified filename. Declaration static exists(filename: string): boolean Parameters Type Name Description string filename The name of the file. Returns Type Description boolean Return is dependent on whether file with the specified filename exists. View Source read(string, \"utf-8\" | \"utf-16\") Reads content of the file. Declaration static read(filename: string, encoding?: \"utf-8\" | \"utf-16\"): string Parameters Type Name Description string filename The name of the file. \"utf-8\" | \"utf-16\" encoding The encoding of the file. If not specified, it defaults to \"utf-8\". Returns Type Description string View Source read(string, \"binary\") Reads content of the file. Declaration static read(filename: string, encoding: \"binary\"): ArrayBuffer Parameters Type Name Description string filename The name of the file. \"binary\" encoding The encoding of the file. Returns Type Description ArrayBuffer"
  },
  "api/alt-server.html": {
    "href": "api/alt-server.html",
    "title": "Module alt-server",
    "keywords": "Module alt-server Package : @altmp/altv-types Classes BaseObject Blip Checkpoint Colshape ColshapeCircle ColshapeCuboid ColshapeCylinder ColshapeRectangle ColshapeSphere Entity File Player PointBlip RGBA Vector3 Vehicle VoiceChannel WorldObject Interfaces IFireInfo IVector3 IVehicleNeon Functions View Source clearEveryTick(number) Clears a timer set with the everyTick(() => void) function. Declaration clearEveryTick(id: number): void Parameters Type Name Description number id The id of a timer. View Source clearInterval(number) Clears a timer set with the setInterval(() => void, number) function. Declaration clearInterval(id: number): void Parameters Type Name Description number id The id of a timer. View Source clearNextTick(number) Clears a timer set with the nextTick(() => void) function. Declaration clearNextTick(id: number): void Parameters Type Name Description number id The id of a timer. View Source clearTimeout(number) Clears a timer set with the setTimeout(() => void, number) function. Declaration clearTimeout(id: number): void Parameters Type Name Description number id The id of a timer. View Source deleteMeta(string) Removes the specified key. Declaration deleteMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source deleteSyncedMeta(string) Removes the specified key. Declaration deleteSyncedMeta(key: string): void Parameters Type Name Description string key The key of the value to remove. View Source emit(string, any[]) Emits specified event across server resources. Declaration emit(eventName: string, ...args: any[]): void Parameters Type Name Description string eventName Name of the event. any[] args Rest parameters for emit to send. View Source emitClient(Player, string, any[]) Emits specified event to specific client. Declaration emitClient(player: Player, eventName: string, ...args: any[]): void Parameters Type Name Description Player player Event is sent to specific player. string eventName Name of the event. any[] args Rest parameters for emit to send. View Source emitClient(null, string, any[]) Emits specified event to specific client. Declaration emitClient(player: null, eventName: string, ...args: any[]): void Parameters Type Name Description null player Event is sent to every player. string eventName Name of the event. any[] args Rest parameters for emit to send. View Source everyTick(() => void) Schedules execution of handler on every tick. Declaration everyTick(handler: () => void): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearEveryTick(number) function to cancel the timer. View Source getMeta(string) Gets a value using the specified key. Declaration getMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source getNetTime() Declaration getNetTime(): number Returns Type Description number View Source getResourceExports(string) Declaration getResourceExports(name: string): any Parameters Type Name Description string name Returns Type Description any View Source getResourceMain(string) Declaration getResourceMain(name: string): string Parameters Type Name Description string name Returns Type Description string View Source getResourcePath(string) Declaration getResourcePath(name: string): string Parameters Type Name Description string name Returns Type Description string View Source getSyncedMeta(string) Gets a value using the specified key. Declaration getSyncedMeta(key: string): any Parameters Type Name Description string key The key of the value to get. Returns Type Description any Dynamic value associated with the specified key. View Source hasMeta(string) Determines whether contains the specified key. Declaration hasMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean True when element associated with the specified key is stored. View Source hasResource(string) Declaration hasResource(name: string): boolean Parameters Type Name Description string name Returns Type Description boolean View Source hasSyncedMeta(string) Determines whether contains the specified key. Declaration hasSyncedMeta(key: string): boolean Parameters Type Name Description string key The key of the value to locate. Returns Type Description boolean Return is dependent on whether element associated with the specified key is stored. View Source hash(string) Creates a hash using Jenkins one-at-a-time algorithm. Declaration hash(str: string): number Parameters Type Name Description string str A string, from which hash will be created. Returns Type Description number View Source log(any[]) Declaration log(...args: any[]): void Parameters Type Name Description any[] args View Source logError(any[]) Declaration logError(...args: any[]): void Parameters Type Name Description any[] args View Source logWarning(any[]) Declaration logWarning(...args: any[]): void Parameters Type Name Description any[] args View Source nextTick(() => void) Schedules execution of handler on next tick. Declaration nextTick(handler: () => void): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearNextTick(number) function to cancel the timer. View Source off(string, (...args: any[]) => void) Unsubscribes from server event handler with specified listener. Declaration off(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be removed. Remarks Listener should be of the same reference as when event was subscribed. View Source offClient(string, (...args: any[]) => void) Unsubscribes from client event handler with specified listener. Declaration offClient(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be removed. Remarks Listener should be of the same reference as when event was subscribed. View Source on(string, (...args: any[]) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: string, listener: (...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (...args: any[]) => void listener Listener that should be added. View Source on(\"anyResourceError\", (resourceName: string) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"anyResourceError\", listener: (resourceName: string) => void): void Parameters Type Name Description \"anyResourceError\" eventName Name of the event. (resourceName: string) => void listener Listener that should be added. View Source on(\"anyResourceStart\", (resourceName: string) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"anyResourceStart\", listener: (resourceName: string) => void): void Parameters Type Name Description \"anyResourceStart\" eventName Name of the event. (resourceName: string) => void listener Listener that should be added. View Source on(\"anyResourceStop\", (resourceName: string) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"anyResourceStop\", listener: (resourceName: string) => void): void Parameters Type Name Description \"anyResourceStop\" eventName Name of the event. (resourceName: string) => void listener Listener that should be added. View Source on(\"consoleCommand\", (...args: string[]) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"consoleCommand\", listener: (...args: string[]) => void): void Parameters Type Name Description \"consoleCommand\" eventName Name of the event. (...args: string[]) => void listener Listener that should be added. View Source on(\"entityEnterColshape\", (colshape: Colshape, entity: Entity) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"entityEnterColshape\", listener: (colshape: Colshape, entity: Entity) => void): void Parameters Type Name Description \"entityEnterColshape\" eventName Name of the event. (colshape: Colshape, entity: Entity) => void listener Listener that should be added. View Source on(\"entityLeaveColshape\", (colshape: Colshape, entity: Entity) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"entityLeaveColshape\", listener: (colshape: Colshape, entity: Entity) => void): void Parameters Type Name Description \"entityLeaveColshape\" eventName Name of the event. (colshape: Colshape, entity: Entity) => void listener Listener that should be added. View Source on(\"explosion\", (source: Entity, type: number, pos: Vector3, fx: number) => boolean | void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"explosion\", listener: (source: Entity, type: number, pos: Vector3, fx: number) => boolean | void): void Parameters Type Name Description \"explosion\" eventName Name of the event. (source: Entity, type: number, pos: Vector3, fx: number) => boolean | void listener Listener that should be added. View Source on(\"explosion\", (source: Entity, type: number, pos: Vector3, fx: number, target: Entity) => boolean | void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"explosion\", listener: (source: Entity, type: number, pos: Vector3, fx: number, target: Entity) => boolean | void): void Parameters Type Name Description \"explosion\" eventName Name of the event. (source: Entity, type: number, pos: Vector3, fx: number, target: Entity) => boolean | void listener Listener that should be added. View Source on(\"playerChangedVehicleSeat\", (player: Player, vehicle: Vehicle, oldSeat: number, newSeat: number) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerChangedVehicleSeat\", listener: (player: Player, vehicle: Vehicle, oldSeat: number, newSeat: number) => void): void Parameters Type Name Description \"playerChangedVehicleSeat\" eventName Name of the event. (player: Player, vehicle: Vehicle, oldSeat: number, newSeat: number) => void listener Listener that should be added. View Source on(\"playerConnect\", (player: Player) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerConnect\", listener: (player: Player) => void): void Parameters Type Name Description \"playerConnect\" eventName Name of the event. (player: Player) => void listener Listener that should be added. View Source on(\"playerDamage\", (victim: Player, attacker: Entity, weaponHash: number, damage: number) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerDamage\", listener: (victim: Player, attacker: Entity, weaponHash: number, damage: number) => void): void Parameters Type Name Description \"playerDamage\" eventName Name of the event. (victim: Player, attacker: Entity, weaponHash: number, damage: number) => void listener Listener that should be added. View Source on(\"playerDeath\", (victim: Player, killer: Entity, weaponHash: number) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerDeath\", listener: (victim: Player, killer: Entity, weaponHash: number) => void): void Parameters Type Name Description \"playerDeath\" eventName Name of the event. (victim: Player, killer: Entity, weaponHash: number) => void listener Listener that should be added. View Source on(\"playerDisconnect\", (player: Player, reason: string) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerDisconnect\", listener: (player: Player, reason: string) => void): void Parameters Type Name Description \"playerDisconnect\" eventName Name of the event. (player: Player, reason: string) => void listener Listener that should be added. View Source on(\"playerEnteredVehicle\", (player: Player, vehicle: Vehicle, seat: number) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerEnteredVehicle\", listener: (player: Player, vehicle: Vehicle, seat: number) => void): void Parameters Type Name Description \"playerEnteredVehicle\" eventName Name of the event. (player: Player, vehicle: Vehicle, seat: number) => void listener Listener that should be added. View Source on(\"playerLeftVehicle\", (player: Player, vehicle: Vehicle, seat: number) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerLeftVehicle\", listener: (player: Player, vehicle: Vehicle, seat: number) => void): void Parameters Type Name Description \"playerLeftVehicle\" eventName Name of the event. (player: Player, vehicle: Vehicle, seat: number) => void listener Listener that should be added. View Source on(\"removeEntity\", (object: BaseObject) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"removeEntity\", listener: (object: BaseObject) => void): void Parameters Type Name Description \"removeEntity\" eventName Name of the event. (object: BaseObject) => void listener Listener that should be added. View Source on(\"resourceStart\", (errored: boolean) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"resourceStart\", listener: (errored: boolean) => void): void Parameters Type Name Description \"resourceStart\" eventName Name of the event. (errored: boolean) => void listener Listener that should be added. View Source on(\"resourceStop\", () => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"resourceStop\", listener: () => void): void Parameters Type Name Description \"resourceStop\" eventName Name of the event. () => void listener Listener that should be added. View Source on(\"syncedMetaChange\", (entity: Entity, key: string, value: any, oldValue: any) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"syncedMetaChange\", listener: (entity: Entity, key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"syncedMetaChange\" eventName Name of the event. (entity: Entity, key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"streamSyncedMetaChange\", (entity: Entity, key: string, value: any, oldValue: any) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"streamSyncedMetaChange\", listener: (entity: Entity, key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"streamSyncedMetaChange\" eventName Name of the event. (entity: Entity, key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"globalMetaChange\", (key: string, value: any, oldValue: any) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"globalMetaChange\", listener: (key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"globalMetaChange\" eventName Name of the event. (key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"globalSyncedMetaChange\", (key: string, value: any, oldValue: any) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"globalSyncedMetaChange\", listener: (key: string, value: any, oldValue: any) => void): void Parameters Type Name Description \"globalSyncedMetaChange\" eventName Name of the event. (key: string, value: any, oldValue: any) => void listener Listener that should be added. View Source on(\"vehicleDestroy\", (vehicle: Vehicle) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"vehicleDestroy\", listener: (vehicle: Vehicle) => void): void Parameters Type Name Description \"vehicleDestroy\" eventName Name of the event. (vehicle: Vehicle) => void listener Listener that should be added. View Source on(\"weaponDamage\", (source: Entity, target: Entity, weaponHash: number, damage: number, offset: Vector3, bodyPart: number) => boolean | void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"weaponDamage\", listener: (source: Entity, target: Entity, weaponHash: number, damage: number, offset: Vector3, bodyPart: number) => boolean | void): void Parameters Type Name Description \"weaponDamage\" eventName Name of the event. (source: Entity, target: Entity, weaponHash: number, damage: number, offset: Vector3, bodyPart: number) => boolean | void listener Listener that should be added. View Source on(\"startFire\", (player: Player, fires: Array<IFireInfo>) => boolean | void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"startFire\", listener: (player: Player, fires: Array<IFireInfo>) => boolean | void): void Parameters Type Name Description \"startFire\" eventName Name of the event. (player: Player, fires: Array<IFireInfo>) => boolean | void listener Listener that should be added. View Source on(\"startProjectile\", (player: Player, pos: Vector3, dir: Vector3, ammoHash: number, weaponHash: number) => boolean | void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"startProjectile\", listener: (player: Player, pos: Vector3, dir: Vector3, ammoHash: number, weaponHash: number) => boolean | void): void Parameters Type Name Description \"startProjectile\" eventName Name of the event. (player: Player, pos: Vector3, dir: Vector3, ammoHash: number, weaponHash: number) => boolean | void listener Listener that should be added. View Source on(\"playerWeaponChange\", (player: Player, oldWeapon: number, newWeapon: number) => void) Subscribes to server event handler with specified listener. Declaration on(eventName: \"playerWeaponChange\", listener: (player: Player, oldWeapon: number, newWeapon: number) => void): void Parameters Type Name Description \"playerWeaponChange\" eventName Name of the event. (player: Player, oldWeapon: number, newWeapon: number) => void listener Listener that should be added. View Source onClient(string, (player: Player, ...args: any[]) => void) Subscribes to client event handler with specified listener. Declaration onClient(eventName: string, listener: (player: Player, ...args: any[]) => void): void Parameters Type Name Description string eventName Name of the event. (player: Player, ...args: any[]) => void listener Listener that should be added. View Source restartResource(string) Declaration restartResource(name: string): void Parameters Type Name Description string name View Source setInterval(() => void, number) Schedules execution of handler in specified intervals. Declaration setInterval(handler: () => void, miliseconds: number): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. number miliseconds The time, in milliseconds, between execution of specified handler. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearInterval(number) function to cancel the timer. View Source setMeta(string, any) Stores the given value with the specified key. Declaration setMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared locally to all resources. View Source setSyncedMeta(string, any) Stores the given value with the specified key. Declaration setSyncedMeta(key: string, value: any): void Parameters Type Name Description string key The key of the value to store. any value Remarks The given value will be shared with all client resources. View Source setTimeout(() => void, number) Schedules execution of handler once after the expiration of interval. Declaration setTimeout(handler: () => void, miliseconds: number): number Parameters Type Name Description () => void handler Handler that should be scheduled for execution. number miliseconds The time, in milliseconds, before execution of specified handler. Returns Type Description number A number representing the id value of the timer that is set. Use this value with the clearTimeout(number) function to cancel the timer. View Source startResource(string) Declaration startResource(name: string): void Parameters Type Name Description string name View Source stopResource(string) Declaration stopResource(name: string): void Parameters Type Name Description string name Variables View Source DefaultDimension Declaration public const DefaultDimension: number View Source GlobalDimension Declaration public const GlobalDimension: number View Source resourceName Resource name of the executing entity Declaration public const resourceName: string View Source rootDir Declaration public const rootDir: string Type Aliases View Source DateTimeDay Declaration type DateTimeDay = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 View Source DateTimeHour Declaration type DateTimeHour = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 View Source DateTimeMinute Declaration type DateTimeMinute = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 View Source DateTimeMonth Declaration type DateTimeMonth = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 View Source DateTimeSecond Declaration type DateTimeSecond = DateTimeMinute"
  },
  "api/alt-server.IFireInfo.html": {
    "href": "api/alt-server.IFireInfo.html",
    "title": "Interface IFireInfo",
    "keywords": "Interface IFireInfo Module : alt-server Package : @altmp/altv-types Syntax interface IFireInfo Properties View Source pos Declaration public pos: Vector3 Property Value Type Description Vector3 View Source weapon Declaration public weapon: number Property Value Type Description number"
  },
  "api/alt-server.IVector3.html": {
    "href": "api/alt-server.IVector3.html",
    "title": "Interface IVector3",
    "keywords": "Interface IVector3 Module : alt-server Package : @altmp/altv-types Syntax interface IVector3 Properties View Source x Declaration public readonly x: number Property Value Type Description number View Source y Declaration public readonly y: number Property Value Type Description number View Source z Declaration public readonly z: number Property Value Type Description number"
  },
  "api/alt-server.IVehicleNeon.html": {
    "href": "api/alt-server.IVehicleNeon.html",
    "title": "Interface IVehicleNeon",
    "keywords": "Interface IVehicleNeon Module : alt-server Package : @altmp/altv-types Syntax interface IVehicleNeon Properties View Source back Declaration public back: boolean Property Value Type Description boolean View Source front Declaration public front: boolean Property Value Type Description boolean View Source left Declaration public left: boolean Property Value Type Description boolean View Source right Declaration public right: boolean Property Value Type Description boolean"
  },
  "api/alt-server.Player.html": {
    "href": "api/alt-server.Player.html",
    "title": "Class Player",
    "keywords": "Class Player Inheritance BaseObject WorldObject Entity Player Inherited Members dimension id model netOwner pos rot type valid deleteMeta(string) deleteStreamSyncedMeta(string) deleteSyncedMeta(string) destroy() getMeta(string) getStreamSyncedMeta(string) getSyncedMeta(string) hasMeta(string) hasStreamSyncedMeta(string) hasSyncedMeta(string) resetNetOwner(boolean) setMeta(string, any) setNetOwner(Player, boolean) setStreamSyncedMeta(string, any) setSyncedMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class Player extends Entity Properties View Source armour Declaration public armour: number Property Value Type Description number View Source authToken Declaration public readonly authToken: string Property Value Type Description string View Source currentWeapon Declaration public currentWeapon: number Property Value Type Description number View Source currentWeaponComponents Declaration public readonly currentWeaponComponents: Array<number> Property Value Type Description Array<number> View Source currentWeaponTintIndex Declaration public readonly currentWeaponTintIndex: number Property Value Type Description number View Source entityAimOffset Declaration public readonly entityAimOffset: Vector3 Property Value Type Description Vector3 View Source entityAimingAt Declaration public readonly entityAimingAt: Entity | null Property Value Type Description Entity | null View Source flashlightActive Declaration public readonly flashlightActive: boolean Property Value Type Description boolean View Source health Declaration public health: number Property Value Type Description number View Source hwidExHash Declaration public readonly hwidExHash: string Property Value Type Description string View Source hwidHash Declaration public readonly hwidHash: string Property Value Type Description string View Source ip Declaration public readonly ip: string Property Value Type Description string View Source maxArmour Declaration public maxArmour: number Property Value Type Description number View Source maxHealth Declaration public maxHealth: number Property Value Type Description number View Source name Declaration public readonly name: string Property Value Type Description string View Source ping Declaration public readonly ping: number Property Value Type Description number View Source seat Declaration public readonly seat: number Property Value Type Description number View Source socialId Declaration public readonly socialId: string Property Value Type Description string View Source vehicle Declaration public readonly vehicle: Vehicle | null Property Value Type Description Vehicle | null View Source all Declaration public static all: Array<Player> Property Value Type Description Array< Player > Methods View Source addWeaponComponent(number, number) Declaration addWeaponComponent(weaponHash: number, component: number): void Parameters Type Name Description number weaponHash number component View Source ban() Declaration ban(): void View Source giveWeapon(number, number, boolean) Declaration giveWeapon(weaponHash: number, ammo: number, equipNow: boolean): void Parameters Type Name Description number weaponHash number ammo boolean equipNow View Source isBanned() Declaration isBanned(): boolean Returns Type Description boolean View Source kick(string) Forcefully disconnects the player with a reason message. Declaration kick(reason?: string): void Parameters Type Name Description string reason The reason that will display to the player on the disconnect screen. If not specified, it defaults to \"KICKED_OUT\". View Source removeAllWeapons() Declaration removeAllWeapons(): void View Source removeWeapon(number) Declaration removeWeapon(weaponHash: number): void Parameters Type Name Description number weaponHash View Source removeWeaponComponent(number, number) Declaration removeWeaponComponent(weaponHash: number, component: number): void Parameters Type Name Description number weaponHash number component View Source setDateTime(DateTimeDay, DateTimeMonth, number, DateTimeHour, DateTimeMinute, DateTimeSecond) Declaration setDateTime(day: DateTimeDay, month: DateTimeMonth, year: number, hour: DateTimeHour, minute: DateTimeMinute, second: DateTimeSecond): void Parameters Type Name Description DateTimeDay day DateTimeMonth month number year DateTimeHour hour DateTimeMinute minute DateTimeSecond second View Source setWeaponTintIndex(number, number) Declaration setWeaponTintIndex(weaponHash: number, tintIndex: number): void Parameters Type Name Description number weaponHash number tintIndex View Source setWeather(number) Declaration setWeather(weatherHash: number): void Parameters Type Name Description number weatherHash View Source spawn(number, number, number, number) Declaration spawn(x: number, y: number, z: number, delay: number): void Parameters Type Name Description number x number y number z number delay View Source getByID(number) Retrieves the player from the pool. Declaration static getByID(id: number): Player | null Parameters Type Name Description number id The id of the player. Returns Type Description Player | null Player if it was found, otherwise null."
  },
  "api/alt-server.PointBlip.html": {
    "href": "api/alt-server.PointBlip.html",
    "title": "Class PointBlip",
    "keywords": "Class PointBlip Inheritance BaseObject WorldObject Blip PointBlip Inherited Members dimension pos type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class PointBlip extends Blip Constructors View Source PointBlip(number, number, number, number) Declaration public PointBlip(type: number, x: number, y: number, z: number): PointBlip Parameters Type Name Description number type number x number y number z"
  },
  "api/alt-server.RGBA.html": {
    "href": "api/alt-server.RGBA.html",
    "title": "Class RGBA",
    "keywords": "Class RGBA Module : alt-server Package : @altmp/altv-types Syntax class RGBA Constructors View Source RGBA(number, number, number, number) Declaration public RGBA(r: number, g: number, b: number, a: number): RGBA Parameters Type Name Description number r number g number b number a Properties View Source a Declaration public a: number Property Value Type Description number View Source b Declaration public b: number Property Value Type Description number View Source g Declaration public g: number Property Value Type Description number View Source r Declaration public r: number Property Value Type Description number"
  },
  "api/alt-server.Vector3.html": {
    "href": "api/alt-server.Vector3.html",
    "title": "Class Vector3",
    "keywords": "Class Vector3 Module : alt-server Package : @altmp/altv-types Syntax class Vector3 Constructors View Source Vector3(number, number, number) Declaration public Vector3(x: number, y: number, z: number): Vector3 Parameters Type Name Description number x number y number z View Source Vector3(number[]) Declaration public Vector3(arr: number[]): Vector3 Parameters Type Name Description number[] arr View Source Vector3(IVector3) Declaration public Vector3(obj: IVector3): Vector3 Parameters Type Name Description IVector3 obj Properties View Source x Declaration public readonly x: number Property Value Type Description number View Source y Declaration public readonly y: number Property Value Type Description number View Source z Declaration public readonly z: number Property Value Type Description number"
  },
  "api/alt-server.Vehicle.html": {
    "href": "api/alt-server.Vehicle.html",
    "title": "Class Vehicle",
    "keywords": "Class Vehicle Inheritance BaseObject WorldObject Entity Vehicle Inherited Members dimension id model netOwner pos rot type valid deleteMeta(string) deleteStreamSyncedMeta(string) deleteSyncedMeta(string) destroy() getMeta(string) getStreamSyncedMeta(string) getSyncedMeta(string) hasMeta(string) hasStreamSyncedMeta(string) hasSyncedMeta(string) resetNetOwner(boolean) setMeta(string, any) setNetOwner(Player, boolean) setStreamSyncedMeta(string, any) setSyncedMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class Vehicle extends Entity Constructors View Source Vehicle(string | number, number, number, number, number, number, number) Declaration public Vehicle(model: string | number, x: number, y: number, z: number, rx: number, ry: number, rz: number): Vehicle Parameters Type Name Description string | number model number x number y number z number rx number ry number rz Properties View Source activeRadioStation Declaration public activeRadioStation: number Property Value Type Description number View Source bodyAdditionalHealth Declaration public bodyAdditionalHealth: number Property Value Type Description number View Source bodyHealth Declaration public bodyHealth: number Property Value Type Description number View Source customPrimaryColor Declaration public customPrimaryColor: RGBA Property Value Type Description RGBA View Source customSecondaryColor Declaration public customSecondaryColor: RGBA Property Value Type Description RGBA View Source customTires Declaration public customTires: boolean Property Value Type Description boolean View Source darkness Declaration public darkness: number Property Value Type Description number View Source dashboardColor Declaration public dashboardColor: number Property Value Type Description number View Source daylightOn Declaration public readonly daylightOn: boolean Property Value Type Description boolean View Source destroyed Declaration public readonly destroyed: boolean Property Value Type Description boolean View Source dirtLevel Declaration public dirtLevel: number Property Value Type Description number View Source driver Declaration public readonly driver: Player | null Property Value Type Description Player | null View Source engineHealth Declaration public engineHealth: number Property Value Type Description number View Source engineOn Declaration public engineOn: boolean Property Value Type Description boolean View Source flamethrowerActive Declaration public readonly flamethrowerActive: boolean Property Value Type Description boolean View Source frontWheels Declaration public readonly frontWheels: number Property Value Type Description number View Source handbrakeActive Declaration public readonly handbrakeActive: boolean Property Value Type Description boolean View Source hasArmoredWindows Declaration public readonly hasArmoredWindows: number Property Value Type Description number View Source headlightColor Declaration public headlightColor: number Property Value Type Description number View Source interiorColor Declaration public interiorColor: number Property Value Type Description number View Source lightsMultiplier Declaration public lightsMultiplier: number Property Value Type Description number View Source livery Declaration public livery: number Property Value Type Description number View Source lockState Declaration public lockState: number Property Value Type Description number View Source manualEngineControl Declaration public manualEngineControl: boolean Property Value Type Description boolean View Source modKit Declaration public modKit: number Property Value Type Description number View Source modKitsCount Declaration public readonly modKitsCount: number Property Value Type Description number View Source neon Declaration public neon: IVehicleNeon Property Value Type Description IVehicleNeon View Source neonColor Declaration public neonColor: RGBA Property Value Type Description RGBA View Source nightlightOn Declaration public readonly nightlightOn: boolean Property Value Type Description boolean View Source numberPlateIndex Declaration public numberPlateIndex: number Property Value Type Description number View Source numberPlateText Declaration public numberPlateText: string Property Value Type Description string View Source pearlColor Declaration public pearlColor: number Property Value Type Description number View Source petrolTankHealth Declaration public petrolTankHealth: number Property Value Type Description number View Source primaryColor Declaration public primaryColor: number Property Value Type Description number View Source rearWheels Declaration public readonly rearWheels: number Property Value Type Description number View Source repairsCount Declaration public readonly repairsCount: number Property Value Type Description number View Source roofLivery Declaration public roofLivery: number Property Value Type Description number View Source roofOpened Declaration public roofOpened: boolean Property Value Type Description boolean View Source secondaryColor Declaration public secondaryColor: number Property Value Type Description number View Source sirenActive Declaration public sirenActive: boolean Property Value Type Description boolean View Source tireSmokeColor Declaration public tireSmokeColor: RGBA Property Value Type Description RGBA View Source wheelColor Declaration public wheelColor: number Property Value Type Description number View Source wheelType Declaration public readonly wheelType: number Property Value Type Description number View Source wheelsCount Declaration public readonly wheelsCount: number Property Value Type Description number View Source windowTint Declaration public windowTint: number Property Value Type Description number View Source all Declaration public readonly static all: Array<Vehicle> Property Value Type Description Array< Vehicle > Methods View Source doesWheelHasTire(number) Declaration doesWheelHasTire(wheelId: number): boolean Parameters Type Name Description number wheelId Returns Type Description boolean View Source getAppearanceDataBase64() Declaration getAppearanceDataBase64(): string Returns Type Description string View Source getArmoredWindowHealth(number) Declaration getArmoredWindowHealth(windowId: number): number Parameters Type Name Description number windowId Returns Type Description number View Source getArmoredWindowShootCount(number) Declaration getArmoredWindowShootCount(windowId: number): number Parameters Type Name Description number windowId Returns Type Description number View Source getBumperDamageLevel(number) Declaration getBumperDamageLevel(bumperId: number): number Parameters Type Name Description number bumperId Returns Type Description number View Source getDamageStatusBase64() Declaration getDamageStatusBase64(): string Returns Type Description string View Source getDoorState(number) Declaration getDoorState(doorId: number): number Parameters Type Name Description number doorId Returns Type Description number View Source getExtra(number) Declaration getExtra(category: number): boolean Parameters Type Name Description number category Returns Type Description boolean View Source getGamestateDataBase64() Declaration getGamestateDataBase64(): string Returns Type Description string View Source getHealthDataBase64() Declaration getHealthDataBase64(): string Returns Type Description string View Source getMod(number) Declaration getMod(category: number): number Parameters Type Name Description number category Returns Type Description number View Source getModsCount(number) Declaration getModsCount(category: number): number Parameters Type Name Description number category Returns Type Description number View Source getPartBulletHoles(number) Declaration getPartBulletHoles(partId: number): number Parameters Type Name Description number partId Returns Type Description number View Source getPartDamageLevel(number) Declaration getPartDamageLevel(partId: number): number Parameters Type Name Description number partId Returns Type Description number View Source getScriptDataBase64() Declaration getScriptDataBase64(): string Returns Type Description string View Source getWheelHealth(number) Declaration getWheelHealth(wheelId: number): number Parameters Type Name Description number wheelId Returns Type Description number View Source isLightDamaged(number) Declaration isLightDamaged(lightId: number): boolean Parameters Type Name Description number lightId Returns Type Description boolean View Source isSpecialLightDamaged(number) Declaration isSpecialLightDamaged(specialLightId: number): boolean Parameters Type Name Description number specialLightId Returns Type Description boolean View Source isWheelBurst(number) Declaration isWheelBurst(wheelId: number): boolean Parameters Type Name Description number wheelId Returns Type Description boolean View Source isWheelDetached(number) Declaration isWheelDetached(wheelId: number): boolean Parameters Type Name Description number wheelId Returns Type Description boolean View Source isWheelOnFire(number) Declaration isWheelOnFire(wheelId: number): boolean Parameters Type Name Description number wheelId Returns Type Description boolean View Source isWindowDamaged(number) Declaration isWindowDamaged(windowId: number): boolean Parameters Type Name Description number windowId Returns Type Description boolean View Source isWindowOpened(number) Declaration isWindowOpened(windowId: number): boolean Parameters Type Name Description number windowId Returns Type Description boolean View Source setAppearanceDataBase64(string) Declaration setAppearanceDataBase64(data: string): void Parameters Type Name Description string data View Source setArmoredWindowHealth(number, number) Declaration setArmoredWindowHealth(windowId: number, health: number): void Parameters Type Name Description number windowId number health View Source setArmoredWindowShootCount(number, number) Declaration setArmoredWindowShootCount(windowId: number, count: number): void Parameters Type Name Description number windowId number count View Source setBumperDamageLevel(number, number) Declaration setBumperDamageLevel(bumperId: number, level: number): void Parameters Type Name Description number bumperId number level View Source setDamageStatusBase64(string) Declaration setDamageStatusBase64(data: string): void Parameters Type Name Description string data View Source setDoorState(number, number) Declaration setDoorState(doorId: number, state: number): void Parameters Type Name Description number doorId number state View Source setExtra(number, boolean) Declaration setExtra(category: number, state: boolean): void Parameters Type Name Description number category boolean state View Source setGamestateDataBase64(string) Declaration setGamestateDataBase64(data: string): void Parameters Type Name Description string data View Source setHealthDataBase64(string) Declaration setHealthDataBase64(data: string): void Parameters Type Name Description string data View Source setLightDamaged(number, boolean) Declaration setLightDamaged(lightId: number, isDamaged: boolean): void Parameters Type Name Description number lightId boolean isDamaged View Source setMod(number, number) Declaration setMod(category: number, id: number): void Parameters Type Name Description number category number id View Source setPartBulletHoles(number, number) Declaration setPartBulletHoles(partId: number, count: number): void Parameters Type Name Description number partId number count View Source setPartDamageLevel(number, number) Declaration setPartDamageLevel(partId: number, level: number): void Parameters Type Name Description number partId number level View Source setRearWheels(number) Declaration setRearWheels(variation: number): void Parameters Type Name Description number variation View Source setScriptDataBase64(string) Declaration setScriptDataBase64(data: string): void Parameters Type Name Description string data View Source setSpecialLightDamaged(number, boolean) Declaration setSpecialLightDamaged(specialLightId: number, isDamaged: boolean): void Parameters Type Name Description number specialLightId boolean isDamaged View Source setWheelBurst(number, boolean) Declaration setWheelBurst(wheelId: number, state: boolean): void Parameters Type Name Description number wheelId boolean state View Source setWheelDetached(number, boolean) Declaration setWheelDetached(wheelId: number, state: boolean): void Parameters Type Name Description number wheelId boolean state View Source setWheelHasTire(number, boolean) Declaration setWheelHasTire(wheelId: number, state: boolean): void Parameters Type Name Description number wheelId boolean state View Source setWheelHealth(number, number) Declaration setWheelHealth(wheelId: number, health: number): void Parameters Type Name Description number wheelId number health View Source setWheelOnFire(number, boolean) Declaration setWheelOnFire(wheelId: number, state: boolean): void Parameters Type Name Description number wheelId boolean state View Source setWheels(number, number) Declaration setWheels(type: number, variation: number): void Parameters Type Name Description number type number variation View Source setWindowDamaged(number, boolean) Declaration setWindowDamaged(windowId: number, isDamaged: boolean): void Parameters Type Name Description number windowId boolean isDamaged View Source setWindowOpened(number, boolean) Declaration setWindowOpened(windowId: number, state: boolean): void Parameters Type Name Description number windowId boolean state View Source getByID(number) Retrieves the vehicle from the pool. Declaration static getByID(id: number): Vehicle | null Parameters Type Name Description number id The id of the vehicle. Returns Type Description Vehicle | null Vehicle if it was found, otherwise null."
  },
  "api/alt-server.VoiceChannel.html": {
    "href": "api/alt-server.VoiceChannel.html",
    "title": "Class VoiceChannel",
    "keywords": "Class VoiceChannel Inheritance BaseObject VoiceChannel Inherited Members type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class VoiceChannel extends BaseObject Constructors View Source VoiceChannel(boolean, number) Declaration public VoiceChannel(isSpatial: boolean, maxDistance: number): VoiceChannel Parameters Type Name Description boolean isSpatial number maxDistance Methods View Source addPlayer(Player) Declaration addPlayer(player: Player): void Parameters Type Name Description Player player View Source isPlayerInChannel(Player) Declaration isPlayerInChannel(player: Player): boolean Parameters Type Name Description Player player Returns Type Description boolean View Source isPlayerMuted(Player) Declaration isPlayerMuted(player: Player): boolean Parameters Type Name Description Player player Returns Type Description boolean View Source mutePlayer(Player) Declaration mutePlayer(player: Player): void Parameters Type Name Description Player player View Source removePlayer(Player) Declaration removePlayer(player: Player): void Parameters Type Name Description Player player View Source unmutePlayer(Player) Declaration unmutePlayer(player: Player): void Parameters Type Name Description Player player"
  },
  "api/alt-server.WorldObject.html": {
    "href": "api/alt-server.WorldObject.html",
    "title": "Class WorldObject",
    "keywords": "Class WorldObject Inheritance BaseObject WorldObject Inherited Members type valid deleteMeta(string) destroy() getMeta(string) hasMeta(string) setMeta(string, any) Module : alt-server Package : @altmp/altv-types Syntax class WorldObject extends BaseObject Properties View Source dimension Object dimension. Declaration public dimension: number Property Value Type Description number View Source pos Object position. Declaration public pos: Vector3 Property Value Type Description Vector3"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Alt:V JS module documentation",
    "keywords": "Alt:V JS module documentation"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Getting Started",
    "keywords": "Getting Started This is the documentation for getting started with developing JS resources."
  },
  "index.html": {
    "href": "index.html",
    "title": "alt:V / Docs JS",
    "keywords": "alt:V / Docs JS This is the documentation for the alt:V JavaScript module to write server gamemodes in JS. Getting started Look into this guide how to create your first server gamemode in JS."
  }
}